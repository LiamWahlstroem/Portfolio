<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d1afe9e8-03d2-4a4e-8f86-d1c0f86e4d89" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.eslintrc.js" beforeDir="false" afterPath="$PROJECT_DIR$/.eslintrc.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/(main)/layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(main)/layout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/(main)/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(main)/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/admin/(editing)/createCollection/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/admin/(editing)/createCollection/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/admin/(editing)/edit/[id]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/admin/(editing)/edit/[id]/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Atoms/Button.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Atoms/Button.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Atoms/ButtonDanger.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Atoms/ButtonDanger.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Atoms/ButtonIcon.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Atoms/ButtonIcon.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Atoms/ButtonSubmit.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Atoms/ButtonSubmit.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Atoms/FooterItem.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Atoms/FooterItem.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Atoms/Heading.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Atoms/Heading.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Atoms/NavbarContainer.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Atoms/NavbarContainer.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Atoms/NavbarItem.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Atoms/NavbarItem.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Molecules/FormChangePassword.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Molecules/FormChangePassword.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Organisms/Footer.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Organisms/Footer.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Organisms/ModalChangePassword.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Organisms/ModalChangePassword.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/eslint.config.mjs" beforeDir="false" afterPath="$PROJECT_DIR$/eslint.config.mjs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/Types/TokenPayload.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/Types/TokenPayload.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/authenticateToken.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/authenticateToken.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/getTemporaryCredentials.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/getTemporaryCredentials.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/hooks/useIsAuthenticated.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/hooks/useIsAuthenticated.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/next.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/next.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/_app.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/_app.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/api/collection/delete/[id].ts" beforeDir="false" afterPath="$PROJECT_DIR$/pages/api/collection/delete/[id].ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postcss.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/postcss.config.js" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2oWqTbgAUGAndBLwuvWDSxfhPxg" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;Development&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/media/liam/New Volume/Personal/Portfolio/photography/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-WS-242.21829.149" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d1afe9e8-03d2-4a4e-8f86-d1c0f86e4d89" name="Changes" comment="" />
      <created>1730995689833</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1730995689833</updated>
      <workItem from="1730995692502" duration="1041000" />
      <workItem from="1731058332644" duration="2728000" />
      <workItem from="1731393146218" duration="2924000" />
      <workItem from="1731508419899" duration="2747000" />
      <workItem from="1731679604000" duration="396000" />
      <workItem from="1731933588287" duration="7835000" />
      <workItem from="1731997263563" duration="5791000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>